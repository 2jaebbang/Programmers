import java.util.*;

class Node {
    int idx;
    double failRate;
    
    public Node(int idx, double failRate){
        this.idx = idx;
        this.failRate = failRate;
    }
}


class Solution {
    public int[] solution(int N, int[] stages) {
        int[] answer = new int[N];
        Node[] temp = new Node[N];
        
        for(int i=0; i<N; i++){
             int failcnt = 0;
             int personcnt = 0;
            for(int j=0; j<stages.length; j++){
                if(stages[j] == i+1){
                    failcnt++;
                }
                if(stages[j] >= i+1){
                    personcnt++;
                }
            }
            
            //failcnt 가 0일 경우 에러
            if(failcnt == 0){
                temp[i] = new Node(i+1, 0);
                continue;
            }
            temp[i] = new Node(i+1, (double)failcnt / personcnt);
        }
        
        Comparator<Node> c = new Comparator<Node>(){
           public int compare(Node n1, Node n2){
               if(n1.failRate < n2.failRate){
                   return 1;
               }
               if(n1.failRate == n2.failRate){
                   if(n1.idx < n2.idx){
                       return -1;
                   } else {
                       return 1;
                   }
               } else{
                   return -1;
               }
           }
        };
        
        Arrays.sort(temp, c);
        
        for(int i=0; i<N; i++){
            answer[i] = temp[i].idx;
        }
        
        return answer;
    }
}
